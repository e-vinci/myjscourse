{"version":3,"sources":["webpack://myjscourse/./src/utils/api/fetch.js","webpack://myjscourse/./src/pages/project-page.js"],"names":["callAPI","endpoint","method","token","data","headers","Headers","options","bearer","append","body","JSON","stringify","toLowerCase","url","process","fetch","response","ok","fullErrorMessage","status","statusText","text","textResponse","console","error","search","onTokenExpiration","Error","json","acquireTokenSilent","success","useState","undefined","projectGroup","setProjectGroup","useEffect","getData","tempProjectGroup"],"mappings":"yNAIe,SAAeA,EAA9B,wC,wCAAe,WAAuBC,EAAUC,EAAgBC,EAAOC,GAAxD,mGAAiCF,MAAS,OACnDG,EAAU,IAAIC,SACdC,EAAU,IACNL,OAASA,EAEbC,IACIK,EADG,UACgBL,EACzBE,EAAQI,OAAO,gBAAiBD,IAG9BJ,IACFG,EAAQG,KAAOC,KAAKC,UAAUR,IAIL,SAAzBF,EAAOW,eACkB,UAAzBX,EAAOW,eACkB,QAAzBX,EAAOW,eAEPR,EAAQI,OAAO,eAAgB,oBACjCF,EAAQF,QAAUA,EACZS,EAAMC,4CAA6Bd,EArB5B,mBA8BYe,MAAMF,EAAKP,GA9BvB,YA8BLU,EA9BK,QAgCGC,GAhCH,wBAiCLC,EACF,iBACAF,EAASG,OACT,MACAH,EAASI,WACT,eAtCO,UAuCkBJ,EAASK,OAvC3B,WAuCHC,EAvCG,OAwCTJ,GAAoBI,EACpBC,QAAQC,MAAM,gBAAiBN,KAE3BA,EAAiBO,OAAO,YAAc,GA3CjC,kCA6CMC,IA7CN,uDA+CH,IAAIC,MAAMT,GA/CP,yBAiDEF,EAASY,OAjDX,iJ,sBAwDf,IAAMF,EAAiB,mCAAG,8GAEAG,UAFA,cAEhBC,EAFgB,yBAGfA,GAHe,oGAAH,qDC3BvB,EA7BoB,WAAO,IAAD,GACgBC,mBAASC,GAA1CC,EADiB,KACHC,EADG,MAGxBC,gBAAU,WAERC,MACC,IAEH,IAAMA,EAAO,mCAAG,6GAEiBrC,EAC3B,+BACA,OAJU,OAERsC,EAFQ,OAMZH,EAAgBG,GANJ,gDASZd,QAAQC,MAAM,gBAAd,MATY,yDAAH,qDAab,OACE,gBAAC,IAAD,KACE,0CACA,8CAAsBd,KAAKC,UAAUsB","file":"component---src-pages-project-page-js-15e507bf7bde89228d72.js","sourcesContent":["// Helper function to call our API\r\n// using authorization bearer token scheme\r\nimport { acquireTokenSilent } from \"../auths/authPopup\";\r\n\r\nexport default async function callAPI(endpoint, method = \"get\", token, data) {\r\n  let headers = new Headers();\r\n  let options = {};\r\n  options.method = method;\r\n\r\n  if (token) {\r\n    const bearer = `Bearer ${token}`;\r\n    headers.append(\"Authorization\", bearer);\r\n  }\r\n\r\n  if (data) {\r\n    options.body = JSON.stringify(data);\r\n  }\r\n\r\n  if (\r\n    method.toLowerCase() === \"post\" ||\r\n    method.toLowerCase() === \"patch\" ||\r\n    method.toLowerCase() === \"put\"\r\n  )\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n  options.headers = headers;  \r\n  const url = process.env.GATSBY_API_URL + endpoint;\r\n  console.log(\r\n    \"request made to API at: \" + new Date().toString(),\r\n    \"URL:\",\r\n    url,\r\n    \"Options:\",\r\n    options\r\n  );\r\n  try {\r\n    const response = await fetch(url, options);\r\n\r\n    if (!response.ok) {\r\n      let fullErrorMessage =\r\n        \" Error code : \" +\r\n        response.status +\r\n        \" : \" +\r\n        response.statusText +\r\n        \"/nMessage : \";\r\n      const textResponse = await response.text();\r\n      fullErrorMessage += textResponse;\r\n      console.error(\"fetch() error\", fullErrorMessage);\r\n      // deal with token expiration\r\n      if (fullErrorMessage.search(\"expired\") > -1) {\r\n        console.log(\"issue\");\r\n        return await onTokenExpiration();\r\n      }\r\n      throw new Error(fullErrorMessage);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.log(\"error:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nconst onTokenExpiration = async () => {\r\n  try {\r\n    const success = await acquireTokenSilent();\r\n    return success;\r\n  } catch (error) {\r\n    console.log(\"onTokenExpiration:error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MainLayout from \"../components/main-layout\";\r\nimport callAPI from \"../utils/api/fetch\";\r\n\r\nconst ProjectPage = () => {\r\n  const [projectGroup, setProjectGroup] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    // get data from APIs\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      let tempProjectGroup = await callAPI(\r\n        \"projectgroups/default/public\",\r\n        \"get\"\r\n      );\r\n      setProjectGroup(tempProjectGroup);\r\n      console.log(\"data:\", tempProjectGroup);\r\n    } catch (error) {\r\n      console.error(\"getData:error\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainLayout>\r\n      <h3>Project Page</h3>\r\n      <p>Current project : {JSON.stringify(projectGroup)}</p>\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default ProjectPage;\r\n"],"sourceRoot":""}